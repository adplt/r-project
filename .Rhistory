library(moments)
skewness(data.female)
View(data.female)
skewness(data.female[1:6])
skewness(data.female[,1:6])
skewness(data.female[,3:11])
skewness(data.female$height[,3:11])
skewness(data.female$height)
kurtosis(data.female$height)
quantile(data.male$height, c(0.25, 0.5, 0.75))
skewness(data.male$height)
kurtosis(data.male$height)
skewness(data.male$weight)
skewness(data.male$handedness)
remove(data.female[which(is.na(data.female)=T)])
remove(data.female[which(is.na(data.female)) = T])
remove(data.female[which(is.na(data.female)=T)])
remove(data.female[which(is.na(data.female)=TRUE)])
remove(data.female[which(is.na(data.female))=TRUE])
remove(data.female[which(is.na(data.female$height))=TRUE])
remove(data.female[which(is.na(data.female$height))])
remove(data.female[is.na(data.female$height)])
remove(data.female[which(is.na(data.female$height)) == TRUE])
data.female = data.female[which(is.na(data.female$height)=FALSE, is.na(data.female$weight)=FALSE, is.na(data.female$handedness)=FALSE, is.na(data.female$exercise)=FALSE, is.na(data.female$smoke)=FALSE)]
data.female = data.female[which(is.na(data.female$height)==FALSE, is.na(data.female$weight)==FALSE, is.na(data.female$handedness)==FALSE, is.na(data.female$exercise)==FALSE, is.na(data.female$smoke)==FALSE)]
data.female[which(is.na(data.female$height))]
data.female[which(is.na(data.female$height)==TRUE)]
data.female[which(is.na(data.female$height))==TRUE]
data.female[which(is.na(data.female$height)==FALSE)]
data.female[which(is.na(data.female$height))]
is.na(data.female$handedness)==FALSE
data.female$height[is.na(data.female$handedness)==FALSE]
data.female[is.na(data.female$handedness)==FALSE]
data.female$height[is.na(data.female$handedness)==FALSE]
data.female$handedness[is.na(data.female$handedness)==FALSE]
max(data.female, na.rm=TRUE)
max(data.female$handedness, na.rm=TRUE)
stopifnot(complete.cases(data.female) != is.na(data.female))
stopifnot(complete.cases(data.female) != is.na(data.female$handedness))
ok <- complete.cases(data.female)
ok
data.female[ok]
data.female[which(ok)]
data.female$handedness[which(ok)]
complete.cases(data.female)
complete.cases(data.female)[]
complete.cases(data.female) != is.na(data.female)
nilai = complete.cases(data.female) != is.na(data.female)
View(nilai)
data.female[complete.cases(data.female)]
data.female[complete.cases(data.female$sex)]
data.female[complete.cases(data.female$handedness)]
data.female[complete.cases()]
data.female[complete.cases(data.female) != is.na(data.female)]
value = data.female[complete.cases(data.female) != is.na(data.female)]
nilai = data.female[complete.cases(data.female) != is.na(data.female)]
nilai = data.female[complete.cases(data.female$handedness) != is.na(data.female$handedness)]
nilai = data.female$handedness[complete.cases(data.female$handedness) != is.na(data.female$handedness)]
nilai = data.female[is.na(data.female$handedness) == FALSE]
nilai = data.female$handedness[is.na(data.female$handedness) == FALSE]
nilai = data.female[is.na(data.female$handedness) == FALSE]
na.omit(data.female)
nilai = na.omit(data.female)
View(data.female)
data.female
View(data.male)
View(data)
data[which(is.na(data$handedness))]
data$handedness[which(is.na(data$handedness))]
View(data)
data.female$handedness[which(is.na(data.female$handedness))]
View(data.female)
remove(nilai)
nilai = na.omit(data.female)
View(nilai)
View(data.female)
View(nilai)
data = na.omit(data)
dim(data)
summary(data)
sort(data$height)
output = sort(data$height, decreasing=T, index.return=T)
View(output)
data[order(-data$height)[1:10],1:2]
by(data$height, data$sex, mean)
data.split = split(data, data$sex)
View(data.split)
data.female = data.split[['Female']]
View(data.female)
data.male = data.split[['Male']]
View(data.male)
boxplot(data.female$height, names=c('Female\'s Height'), show.names=T)
boxplot(data.male$height, names=c('Male\'s Height'), show.names=T)
boxplot(data.male$height, data.female$height, names=c('Male\'s Height', 'Female\'s Height'))
quantile(data.female$height, c(0.25, 0.5, 0.75))
quantile(data.male$height, c(0.25, 0.5, 0.75))
skewness(data.female$height)
skewness(data.male$weight)
skewness(data.male$height)
kurtosis(data.female$height)
kurtosis(data.male$height)
data[order(-data$height)[1:10]]
data[order(-data$height)[1:10],1:2]
data[order(+data$height)[1:10],1:2]
data[order(data$height)[1:10],1:2]
order(data$height)[1:10]
order(-data$height)[1:10]
order(-data$height)
order(-data$height)
order(-data$height)
order(-data$height)[1:10]
hist(data.female)
hist(data.female$height)
hist(data.female$height, main = 'Female\'s Height')
hist(data.female$height, main = 'Female\'s Height', xlab = 'Female\'s Height')
hist(data.male$height, main = 'Male\'s Height', xlab = 'Male\'s Height')
skewness(data.male$height)
hist(data.male$height, main = 'Male\'s Height', xlab = 'Male\'s Height')
plot(payroll[which(league == 'NL')], wins[which(league == 'NL')], pch=2, points(payroll[which(league == 'AL')], wins[which(league == 'AL')], pch=1), xlim=range(as.numeric(payroll)), ylim=range(as.numeric(wins)), xlab='payroll', ylab='wins', lines(range(payroll), c(81,81), lty = 3))
data = read.csv('teams.csv')
attach(data)
plot(payroll[which(league == 'NL')], wins[which(league == 'NL')], pch=2, points(payroll[which(league == 'AL')], wins[which(league == 'AL')], pch=1), xlim=range(as.numeric(payroll)), ylim=range(as.numeric(wins)), xlab='payroll', ylab='wins', lines(range(payroll), c(81,81), lty = 3))
plot(payroll[which(league == 'NL')], wins[which(league == 'NL')], pch=2, points(payroll[which(league == 'AL')], wins[which(league == 'AL')], pch=1), xlim=range(as.numeric(payroll)), ylim=range(as.numeric(wins)), xlab='payroll', ylab='wins')
plot(payroll[which(league == 'NL')], wins[which(league == 'NL')], pch=2, points(payroll[which(league == 'AL')], wins[which(league == 'AL')], pch=1), xlim=range(as.numeric(payroll)), ylim=range(as.numeric(wins)), xlab='payroll', ylab='wins', lines(range(payroll), c(81,81), lty = 3))
plot(payroll[which(league == 'NL')], wins[which(league == 'NL')], pch=2, points(payroll[which(league == 'AL')], wins[which(league == 'AL')], pch=1), xlim=range(as.numeric(payroll)), ylim=range(as.numeric(wins)), xlab='payroll', ylab='wins', legend('bottomright', c('pct > 0.5', 'pct <= 0.5'), pch=c(1,2), title='Legend'))
remove(data)
remove(data.female)
remove(data.male)
remove(data.split)
remove(nilai)
remove(output)
remove(ok)
remove(value)
load('parenthood.Rdata')
attach(parenthood)
str(parenthood)
hist(dan.grump)
hist(dan.sleep)
hist(baby.sleep)
View(parenthood)
plot(dan.grump, dan.sleep)
qqline (dan.grump, col='red')
qqline(dan.grump, col='red')
qqnorm(dan.grump);
qqline (dan.grump, col=’red’);
qqline (dan.grump, col='red');
qqnorm (dan.sleep);qqline (dan.sleep, col='red')
qqnorm(baby.sleep);qqline(baby.sleep, col=’red’)
qqnorm(baby.sleep);qqline(baby.sleep, col='red')
qqnorm(baby.sleep, dan.sleep);qqline(baby.sleep, col='red')
qqnorm(baby.sleep, dan.sleep, xlim=range(baby.sleep), ylim = range(dan.sleep));qqline(baby.sleep, col='red')
plot(dan.grump, dan.sleep)
cor(dan.sleep, dan.grump)
load('effort.Rdata')
attach(effort)
effort
hist(hours)
hist(grade)
plot(hours, grade)
View(parenthood)
plot(dan.grump, dan.sleep, cor(dan.sleep, dan.grump))
cor(plot(dan.sleep, dan.grump))
cor(dan.sleep, dan.grump, dan.sleep, day)
cor(dan.sleep, dan.grump, baby.sleep, day)
cor(dan.sleep, dan.grump, baby.sleep,)
cor(dan.sleep, dan.grump, baby.sleep)
cor.test(dan.sleep, dan.grump, baby.slee)
cor.test(dan.sleep, dan.grump, baby.sleep)
cor.test(cbind(dan.sleep, dan.grump, baby.sleep))
cor.test(cbind(dan.sleep, dan.grump, baby.sleep), scale(dan.sleep, center=T))
cor.test(cbind(dan.sleep, dan.grump, baby.sleep), scale(dan.sleep, center=T), scale(dan.grump, center = T), scale(baby.sleep, center = T))
cor(parenthood)
cor(pairs(dan.sleep, baby.sleep), pairs(dan.grump, day))
cor(pairs(dan.sleep, baby.sleep, dan.grump, day))
pairs(dan.sleep, baby.sleep, dan.grump, day)
cor(pairs(dan.sleep, baby.sleep))
pairs(cor(parenthood), cor(dan.sleep, baby.sleep))
pairs(cor(dan.grump, day), cor(dan.sleep, baby.sleep))
pairs(cor(dan.grump, baby.sleep), cor(dan.sleep, baby.sleep))
pairs(cor(dan.grump, baby.sleep)
)
pairs(cor(dan.grump, baby.sleep))
pairs(cor(dan.grump, baby.sleep), cor(dan.sleep, baby.sleep))
pairs(cor(dan.grump, baby.sleep), cor(dan.sleep, baby.sleep))
pairs(cor(), dan.grump, baby.sleep)
pairs(cor(parenthood), cor(dan.grump, baby.sleep))
pairs(cor(parenthood), cor(dan.grump, baby.sleep), cor(dan.grump, dan.sleep), cor(baby.sleep, dan.sleep))
pairs(cor(parenthood), (dan.grump, baby.sleep, dan.sleep))
pairs(~ dan.grump + baby.sleep + dan.sleep)
cor(pairs(~ dan.grump + baby.sleep + dan.sleep))
pairs(~ dan.grump + baby.sleep + dan.sleep, data = parenthood)
pairs(~ dan.grump + baby.sleep + dan.sleep, data = parenthood)
pairs(dan.grump ~ baby.sleep ~ dan.sleep, data = parenthood)
pairs(parenthood)
pairs(parenthood, pch = 21)
pairs(parenthood, pch = 21)
pairs(parenthood, pch = 21, bty = n)
pairs(parenthood, pch = 21, bty = 'n')
pairs(parenthood, pch = 21, bty = 'n', ncol = 2)
warnings()
pairs(parenthood)
pairs(parenthood, cor(parenthood))
pairs(parenthood, cor(parenthood), labels=names(parenthood))
names(parenthood)
label = names(parenthood)
pairs(parenthood, cor(parenthood), labels = label)
pairs(parenthood, cor(parenthood), labels = label)
pairs(parenthood, cor(parenthood, method=c('Pearson')), labels = label)
pairs(parenthood, cor(parenthood, method=c('pearson')), labels = label)
pairs(parenthood, cor(parenthood, method='pearson'), labels = label)
pairs(parenthood, cor(parenthood, method='pearson'))
pairs(parenthood, labels = label, cor(parenthood, method='pearson'))
pairs(parenthood, label.pos = 3, cor(parenthood, method='pearson'))
pairs(parenthood, label.pos = 2, cor(parenthood, method='pearson'))
pairs(parenthood, label.pos = 0, cor(parenthood, method='pearson'))
pairs(parenthood, cex.labels = NULL, cor(parenthood, method='pearson'))
plot(dan.sleep, baby.sleep)
pairs(dan.sleep, baby.sleep)
pairs(c(dan.sleep, baby.sleep))
plot(dan.grump, baby.sleep)
pairs(parenthood, cor(parenthood, method='pearson'))
pairs(parenthood)
pairs(c(dan.sleep, dan.grump, baby.sleep))
value = c(dan.sleep, dan.grump, baby.sleep)
value = dan.sleep + dan.grump + baby.sleep
value = setNames(data.frame(as.list(1:3)), parenthood)
subset(parenthood, select = c('dan.sleep', 'baby.sleep', 'dan.grump'))
value = subset(parenthood, select = c('dan.sleep', 'baby.sleep', 'dan.grump'))
View(value)
pairs(value)
pairs(value, cex = 1.5)
pairs(value, upper.panel = NULL)
pairs(value, upper.panel = NULL)
pairs(value, cor(value), upper.panel = NULL)
View(effort)
plot(hours, grade)
hours.rank = rank(hours)
hours.rank
grade.rank = rank(grade)
grade.rank
cor(hours.rank, grade.rank)
cor (hours, grade, method = “spearman”)
cor(hours, grade, method = 'spearman')
cor.test(dan.sleep, dan.grump)
auto = read.csv('autos.csv')
View(auto)
attach(auto)
str(auto)
plot(horsepower, price)
model = lm(price  ̃ horsepower)
model = lm(price~horsepower)
View(model)
model
plot(horsepower, price)
abline(model)
summary(model)
new.data = data.frame(horsepower = c(100,125,150,175,200))
predict(model, new.data)
plot(horsepower, price)
attach(auto)
plot(horsepower, price)
model = lm(price ~ horsepower)
model
abline(model)
summary(model)
predict(model, new.data)
formula = lm(price ~ length + engine.size + horsepower + city.mpg)
formula
View(auto)
plot(horsepower, city.mpg)
formula2 = lm(city.mpg ~ log(horsepower))
formula2
plot(horsepower, city.mpg)
plot(log(horsepower), city.mpg)
abline(formula2)
cor(horsepower,length).
attach(auto)
attach(auto)
cor(horsepower,length).
cor(horsepower,length)
cor(horsepower,length, method = 'spearman')
cor(horsepower,length, method = 'pearson')
cor.test(horsepower,length)
horsepower.rank = rank(horsepower)
length.rank = rank(length)
cor(horsepower.rank,length.rank,method = 'spearman')
plot(horsepower,length)
model2 = lm(horsepower ~ length)
model2
summary(model2)
model3 = lm(horsepower ~ log(length)); model3;
summary(model);
summary(model3);
model4 = loess(horsepower~length)
model4
summary(model4)
install.packages('np')
library(np)
model5 = npreg(horsepower~length)
model5
summary(model5)
predict(model2, c(100,125,150,175,200))
predict(model2, horsepower.data=c(100,125,150,175,200))
predict(model3, horsepower.data=c(100,125,150,175,200))
attach(sleep)
sleep
mean(extra)
t.test(extra,mu=0)
attach(sleep)
sleep
mean(extra)
t.test(extra, mu = 0)
mean(extra[group==1])
mean(extra[group==2])
t.test(extra~group, sleep, var.equal=T, paired=T)
attach(InsectSprays)
InsectSprays
data(InsectSprays)
str(InsectSprays)
tapply(count,spray,mean)
boxplot(count ~ spray, InsectSprays)
oneway.test(count~spray)
aov.out = aov(count ~ spray, data=InsectSprays)
TukeyHSD(aov.out)
load(chico.Rdata)
load(chico.Rdata)
load("chico.Rdata")
attach(chico)
chico
mean(grade_test1)
mean(grade_test2)
t.test(grade_test1~grade_test2, chico, var.equal = T, paired=T)
t.test(grade_test1~id, chico, var.equal = T, paired=T)
t.test(grade_test1~grade_test2, chico, var.equal = T, paired=T)
t.test (extra~group, sleep, var.equal = T, paired=T)
t.test(extra~group, sleep, var.equal = T, paired=T)
mean(id)
t.test(grade_test1, mu=0)
t.test(grade_test2, mu=0)
t.test(grade_test2~grade_test1)
InsectSprays
tapply(grade_test1,grade_test2,var)
oneway.test(grade_test1~grade_test2)
t.test(grade_test1~id)
load("randomness.Rdata")
str(randomness)
randomness
surat_tilang = c(merah = 0.5, biru 0.5)
surat_tilang = c(merah = .5, biru .5)
surat_tilang = c('merah' = .5, 'biru' .5)
surat_tilang = c('merah' = .5, 'biru' = .5)
surat_tilang
remove(surat_tilang)
surat_tilang_prob = c('merah' = .5, 'biru' = .5)
surat_tilang_expect = 150 * surat_tilang_prob
surat_tilang_expect
surat_tilang_observe = c('merah' = 91, 'biru' = 59)
surat_tilang_expect = surat_tilang_prob
surat_tilang_prob
surat_tilang_expect
remove(surat_tilang_observe)
surat_tilang_expect = 150 * surat_tilang_prob
surat_tilang_prob = c('merah' = .5, 'biru' = .5); surat_tilang_expect = 150 * surat_tilang_prob
surat_tilang_prob
surat_tilang_expect
surat_tilang_observe - surat_tilang_expect
surat_tilang_observe = c('merah' = 91, 'biru' = 59)
surat_tilang_observe - surat_tilang_expect
chi2 = surat_tilang_observe - surat_tilang_expect
chi2
chi2 = chi2^2
chi2
chi2 = chi2 / surat_tilang_expect
chi2
attach(surat_tilang_observe)
summary(surat_tilang_observe)
table = table(surat_tilang_observe)
table
surat_tilang_observe
table = table(surat_tilang_observe, c('Merah','Biru'))
table
table = table(surat_tilang_observe)
cbind(table, df[surat_tilang_observe])
cbind(table, surat_tilang_observe)
rbind(table, df[surat_tilang_observe])
rbind(table, table[surat_tilang_observe])
rbindlist(table, table[surat_tilang_observe])
rbindlist(table, list(c(125,25)))
rbind(table, c(125,25))
table(rbind(table, c(125,25)), c('Merah','Biru'))
table(table, c('Merah','Biru'))
table
remove(table)
tabel = rbind(table, c(125,25))
tabel = rbind(tabel, c(125,25))
tabel
table
table(surat_tilang_observe)
tabel = table(surat_tilang_observe)
tabel = rbind(tabel, c(125,25))
tabel
tabel = table(tabel, c('Merah','Biru'))
names(tabel) <- c('Merah','Biru')
tabel
colnames(tabel) <- c('Merah','Biru')
tabel
remove(tabel)
tabel = table(surat_tilang_observe)
surat_tilang_observe
tabel
remove(tabel[2])
remove(tabel[2:2])
tabel <- tabel[-c(1)]
tabel
remove(tabel)
mhs <- matrix(c(6, 1, 3, 13),nrow = 2, dimnames = list (c("Tidak Lulus",
"Lulus"), c("Depresi", "Tidak Depresi")))
mhs <- matrix(c(6, 1, 3, 13),nrow = 2, dimnames = list (c("Tidak Lulus", "Lulus"), c("Depresi", "Tidak Depresi")))
mhs
tabel <- matrix(c(1, 91, 59, 2, 125, 25, 3, 47, 103, 4, 103, 47, 5, 98, 52, 6, 45, 105, 7, 120, 30, 8, 38, 112, 9, 61, 89, 10, 22, 128, 11, 57, 93, 12, 67, 81), nrow = 12, dimnames = list (c('Bulan Ke-', 'Merah', 'Biru')))
tabel <- matrix(c(1, 91, 59, 2, 125, 25, 3, 47, 103, 4, 103, 47, 5, 98, 52, 6, 45, 105, 7, 120, 30, 8, 38, 112, 9, 61, 89, 10, 22, 128, 11, 57, 93, 12, 67, 81), nrow = 12, dimnames = list(c('Bulan Ke-', 'Merah', 'Biru'))
;
tabel <- matrix(c(1, 91, 59, 2, 125, 25, 3, 47, 103, 4, 103, 47, 5, 98, 52, 6, 45, 105, 7, 120, 30, 8, 38, 112, 9, 61, 89, 10, 22, 128, 11, 57, 93, 12, 67, 81), nrow = 12, dimnames = list(c('Bulan Ke-', 'Merah', 'Biru'));
tabel <- matrix(c(1, 91, 59, 2, 125, 25, 3, 47, 103, 4, 103, 47, 5, 98, 52, 6, 45, 105, 7, 120, 30, 8, 38, 112, 9, 61, 89, 10, 22, 128, 11, 57, 93, 12, 67, 81), nrow = 12, dimnames = list(c('Bulan Ke-', 'Merah', 'Biru')));
tabel <- matrix(c(1, 91, 59, 2, 125, 25, 3, 47, 103, 4, 103, 47, 5, 98, 52, 6, 45, 105, 7, 120, 30, 8, 38, 112, 9, 61, 89, 10, 22, 128, 11, 57, 93, 12, 67, 81), nrow = 12;
tabel <- matrix(c(1, 91, 59, 2, 125, 25, 3, 47, 103, 4, 103, 47, 5, 98, 52, 6, 45, 105, 7, 120, 30, 8, 38, 112, 9, 61, 89, 10, 22, 128, 11, 57, 93, 12, 67, 81), nrow = 12);
tabel
remove(tabel)
tabel <- matrix(c(1, 91, 59, 2, 125, 25, 3, 47, 103, 4, 103, 47, 5, 98, 52, 6, 45, 105, 7, 120, 30, 8, 38, 112, 9, 61, 89, 10, 22, 128, 11, 57, 93, 12, 67, 81), ncol = 3);
tabel
mhs <- matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 91, 125, 47, 103, 98, 45, 120, 38, 61, 22, 57, 69, 59, 25, 103, 47, 52, 105, 30, 112, 89, 128, 93, 81), nrow = 12, dimnames = list (c('Bulan Ke-', 'Merah', 'Biru')))
mhs <- matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 91, 125, 47, 103, 98, 45, 120, 38, 61, 22, 57, 69, 59, 25, 103, 47, 52, 105, 30, 112, 89, 128, 93, 81), ncol = 3)
tabel <- matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 91, 125, 47, 103, 98, 45, 120, 38, 61, 22, 57, 69, 59, 25, 103, 47, 52, 105, 30, 112, 89, 128, 93, 81), ncol = 3)
remove(mhs)
tabel
names(tabel) <- c('Merah','Biru')
tabel
tabel <- matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 91, 125, 47, 103, 98, 45, 120, 38, 61, 22, 57, 69, 59, 25, 103, 47, 52, 105, 30, 112, 89, 128, 93, 81), ncol = 3)
tabel
colnames(tabel) <- c('Merah','Biru')
View(tabel)
colnames(tabel) <- c('Merah','Biru')
tabel = table(tabel)
tabel <- matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 91, 125, 47, 103, 98, 45, 120, 38, 61, 22, 57, 69, 59, 25, 103, 47, 52, 105, 30, 112, 89, 128, 93, 81), ncol = 3)
tabel <- matrix(c(91, 125, 47, 103, 98, 45, 120, 38, 61, 22, 57, 69, 59, 25, 103, 47, 52, 105, 30, 112, 89, 128, 93, 81), ncol = 2)
tabel
rbind(tabel, c('Merah','Biru'))
View(tabel)
View(parenthood)
View(tabel)
cbind(tabel, c('Merah','Biru'))
tabel <- matrix(c(91, 125, 47, 103, 98, 45, 120, 38, 61, 22, 57, 69, 59, 25, 103, 47, 52, 105, 30, 112, 89, 128, 93, 81), ncol = 2)
tabel
surat_tilang = read.csv('SuratTilang.csv');
surat_tilang = read.csv("SuratTilang.csv");
surat_tilang = read.csv("surat_tilang.csv");
surat_tilang
View(surat_tilang)
remove(surat_tilang)
surat_tilang = read.csv("surat_tilang.csv");
surat_tilang
View(surat_tilang)
remove(surat_tilang)
View(tabel)
remove(tabel)
View(auto)
View(chico)
View(auto)
surat_tilang = read.csv('surat_tilang.csv')
View(surat_tilang)
attach(surat_tilang)
mean(Bulan.Ke.)
mean(Merah)
mean(Biru)
View(surat_tilang)
oneway.test(count~spray)
oneway.test(Merah~Biru)
oneway.test(Merah~Biru, surat_tilang)
bartlett.test(Merah~Biru, surat_tilang)
boxplot(Merah~Biru, surat_tilang)
aov.out(Merah~Biru, data=surat_tilang)
View(aov.out)
aov = aov.out(Merah~Biru, data=surat_tilang)
aov = aov(Merah~Biru, data=surat_tilang)
aov
View(aov)
TukeyHSD(aov)
t.test(Merah)
t.test(Biru)
boxplot(Merah)
boxplot(Merah, Biru)
cor(Merah, Biru)
merah.rank = rank(Merah)
biru.rank = rank(Biru)
cor(merah.rank,biru.rank)
lm(formula = Merah ~ Biru)
surat_tilang.model = lm(formula = Merah ~ Biru)
View(surat_tilang.model)
remove(surat_tilang.model)
surat_tilang.model1 = lm(formula = Merah ~ Biru)
surat_tilang.model2 = lm(formula = Merah ~ log(Biru))
surat_tilang.model2
lm(formula = Merah ~ log(Biru))
loess(formula = Merah ~ Biru)
library(np)
surat_tilang.model3 = loess(formula = Merah ~ Biru)
surat_tilang.model3
surat_tilang.model4 = npreg(Merah ~ Biru);
surat_tilang.model4
summary(model);
summary(surat_tilang.model4);
summary(surat_tilang.model1)
